{"author":"Aler Denisov <aler.zampillo@gmail.com>","title":"Base contract of EvoCreature structure","fileName":"/contracts/evo/creature/EvoCreatureBase.sol","name":"EvoCreatureBase","abi":[{"anonymous":false,"inputs":[{"indexed":true,"name":"creatureId","type":"uint32"},{"indexed":false,"name":"attack","type":"uint16"},{"indexed":false,"name":"defence","type":"uint16"},{"indexed":false,"name":"hp","type":"uint32"},{"indexed":false,"name":"genes","type":"uint40"},{"indexed":false,"name":"seed","type":"uint16"},{"indexed":false,"name":"genesis","type":"bytes16"}],"name":"Birth","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"message","type":"string"},{"indexed":false,"name":"extra","type":"string"}],"name":"Log","type":"event"}],"source":"pragma solidity ^0.4.18;\n\nimport '../../lib/Debuggable.sol';\n\n/// @title Base contract of EvoCreature structure\n/// @author Aler Denisov <aler.zampillo@gmail.com>\ncontract EvoCreatureBase is Debuggable {\n  uint16 constant MIN_ATTACK = 15;\n  uint16 constant MAX_ATTACK = 25;\n  uint16 constant MIN_DEF    = 0;\n  uint16 constant MAX_DEF    = 10;\n  uint32 constant MIN_HP     = 50;\n  uint32 constant MAX_HP     = 200;\n  uint8 constant MIN_GEN     = 0;\n  uint8 constant MAX_GEN     = 5;\n\n  /// @notice Creature data specification\n  /// @dev Ensure that it fits neatly into exactly two 256-bit words. \n  ///      Because of the byte-packing rules used by Ethereum. \n  ///      [Ref](http://solidity.readthedocs.io/en/develop/miscellaneous.html)\n  struct Creature {\n    /// @dev The timestamp from the block when this creatures came into existence.\n    ///  Uint32 is huge enough to hold date before **02/07/2106 @ 6:28am (UTC)**\n    ///  Timestamp in UNIX specification. [Ref](https://en.wikipedia.org/wiki/Unix_time)\n    uint32 birthTime;                                         // 000 – 032\n\n    /// @dev Influence data (64 bits)\n    uint8 feed;           // |                                // 032 – 040\n    uint8 moral;          // |> Trainer affection             // 040 – 048\n    uint8 injure;         // |                                // 048 – 056\n\n    uint8 water;          // |                                // 056 – 064\n    uint8 nature;         // |                                // 064 – 072\n    uint8 toxic;          // |> Environment affection         // 072 – 080\n    uint8 beast;          // |                                // 080 – 088\n    uint8 chaos;          // |                                // 088 – 096\n\n    /// @dev Progress of evolution\n    uint32 generationExperience;                              // 096 – 128\n\n    uint16 attack;                                            // 128 – 144 \n    uint16 defence;                                           // 144 – 160\n    uint32 healthPoints;                                      // 160 – 176\n\n    uint8 geneWater;          // |                            // 176 – 184\n    uint8 geneNature;         // |                            // 184 – 192\n    uint8 geneToxic;          // |> Environment affection     // 200 – 208\n    uint8 geneBeast;          // |                            // 216 – 224\n    uint8 geneChaos;          // |                            // 224 – 232\n\n    uint8 generation;                                         // 232 - 240\n    uint16 seed;                                              // 240 - 256\n\n    bytes16 genesis;                                          // 256 – 272\n  }\n\n  /// @notice List of all existed creatures in game\n  /// @dev The array index is a creature ID \n  Creature[] internal creatures;\n\n  /// @notice Birth event fires each time when new creature is created\n  /// @param creatureId The index of born creature\n  /// @param attack Base attack power of the creature\n  /// @param defence Base defence rate of the creature\n  /// @param hp Base health point of the creature\n  /// @param genes Tide-packed genes of the creature\n  ///        \\n 00-08 – magic\n  ///        \\n 08-16 – nature\n  ///        \\n 16-24 – toxic\n  ///        \\n 24-32 – beast\n  ///        \\n 32-40 – chaos\n  event Birth(\n      uint32 indexed creatureId,\n      uint16 attack, uint16 defence, uint32 hp,\n      uint40 genes, uint16 seed, bytes16 genesis\n  );\n\n  // --- Internal methods ---\n  function _createCreature(uint256 salt) internal returns (uint256) {\n    uint16 seed =       uint16(_random(salt + 0) % (2 ** 16));\n    uint16 attack =     uint16(_randomRange(salt + 1, MIN_ATTACK, MAX_ATTACK));\n    uint16 defence =    uint16(_randomRange(salt + 2, MIN_DEF, MAX_DEF));\n    uint32 hp =         uint32(_randomRange(salt + 3, MIN_HP, MAX_HP));\n\n    uint40 genes  = uint40(_randomRange(salt + 4, MIN_GEN, MAX_GEN) << 0);          // water\n           genes |= uint40(_randomRange(salt + 5, MIN_GEN, MAX_GEN) << 8);          // nature\n           genes |= uint40(_randomRange(salt + 6, MIN_GEN, MAX_GEN) << 16);         // toxic\n           genes |= uint40(_randomRange(salt + 7, MIN_GEN, MAX_GEN) << 24);         // beast\n           genes |= uint40(_randomRange(salt + 8, MIN_GEN, MAX_GEN) << 32);         // chaos\n\n    bytes16 genesis = bytes16(1);\n\n    Creature memory creature = Creature({\n      birthTime: uint32(block.timestamp),\n      feed: 128,\n      moral: 128,\n      injure: 0,\n      \n      water: 0,\n      nature: 0,\n      toxic: 0,\n      beast: 0,\n      chaos: 0,\n\n      generationExperience: 0,\n      \n      attack: attack,\n      defence: defence,\n      healthPoints: hp,\n      \n      geneWater: uint8(genes >> 0),\n      geneNature: uint8(genes >> 8),\n      geneToxic: uint8(genes >> 16),\n      geneBeast: uint8(genes >> 24),\n      geneChaos: uint8(genes >> 32),\n      \n      generation: 0,\n      seed: seed,\n\n      genesis: genesis\n    });\n\n    uint256 creatureId = creatures.push(creature) - 1;\n    \n    require(creatureId < 2 ** 32);\n\n    // log(\"Create Creature\", creatureId);\n    // log(\"  attack\", uint256(attack));\n    // log(\"  defence\", uint256(defence));\n    // log(\"  healpoints\", uint256(hp));\n    // log(\"  water\", uint256(water));\n    // log(\"  nature\", uint256(nature));\n    // log(\"  toxic\", uint256(toxic));\n    // log(\"  beast\", uint256(beast));\n    // log(\"  chaos\", uint256(chaos));\n\n    Birth(\n      uint32(creatureId),\n      attack, defence, hp,\n      genes, seed, genesis\n    );\n\n    return creatureId;\n  }\n\n  function _randomRange(uint salt, uint min, uint max) internal view returns (uint) {\n    return _range(_random(salt), min, max);\n  }\n\n  function _random(uint salt) internal view returns (uint) {\n    return uint(keccak256(block.blockhash(block.number - 1) & bytes32(salt)));\n  }\n\n  function _range(uint random, uint min, uint max) internal pure returns (uint) {\n    return min + (random % max - min);\n  }\n}","abiDocs":[{"anonymous":false,"inputs":[{"indexed":true,"name":"creatureId","type":"uint32"},{"indexed":false,"name":"attack","type":"uint16"},{"indexed":false,"name":"defence","type":"uint16"},{"indexed":false,"name":"hp","type":"uint32"},{"indexed":false,"name":"genes","type":"uint40"},{"indexed":false,"name":"seed","type":"uint16"},{"indexed":false,"name":"genesis","type":"bytes16"}],"name":"Birth","type":"event","signature":"Birth(uint32,uint16,uint16,uint32,uint40,uint16,bytes16)","signatureHash":"ff5bc6d9"},{"anonymous":false,"inputs":[{"indexed":false,"name":"message","type":"string"},{"indexed":false,"name":"extra","type":"string"}],"name":"Log","type":"event","signature":"Log(string,string)","signatureHash":"821f337a"}]}
