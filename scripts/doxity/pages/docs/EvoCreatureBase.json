{"author":"Aler Denisov <aler.zampillo@gmail.com>","title":"Base contract of EvoCreature structure","fileName":"/contracts/evo/creature/EvoCreatureBase.sol","name":"EvoCreatureBase","abi":[{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"creatureIdToOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}],"source":"pragma solidity ^0.4.18;\n\n/// @title Base contract of EvoCreature structure\n/// @author Aler Denisov <aler.zampillo@gmail.com>\ncontract EvoCreatureBase {\n  /// @notice Creature data specification\n  /// @dev Ensure that it fits neatly into exactly two 256-bit words. \n  ///      Because of the byte-packing rules used by Ethereum. \n  ///      [Ref](http://solidity.readthedocs.io/en/develop/miscellaneous.html)\n  struct Creature {\n    /// @notice The timestamp from the block when this creatures came into existence.\n    /// @notice Uint32 is huge enough to hold date before **02/07/2106 @ 6:28am (UTC)**\n    /// @dev Timestamp in UNIX specification. [Ref](https://en.wikipedia.org/wiki/Unix_time)\n    uint32 birthTime;\n\n    /// @dev pad data struct to fit into two 265 bit words\n    uint32  pad0;\n    /// @dev pad data struct to fit into two 265 bit words\n    uint64  pad1;\n    /// @dev pad data struct to fit into two 265 bit words\n    uint128 pad2;\n  }\n\n  /// @notice List of all existed creatures in game\n  /// @dev The array index is a creature ID \n  Creature[] internal creatures;\n\n  /// @notice A mapping from creature IDs to the address that owns them. \n  /// @dev All creature have some valid owner address.\n  mapping (uint256 => address) public creatureIdToOwner;\n}","abiDocs":[{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"creatureIdToOwner","payable":false,"stateMutability":"view","type":"function","signature":"creatureIdToOwner(uint256)","signatureHash":"e2016d8b"}]}
