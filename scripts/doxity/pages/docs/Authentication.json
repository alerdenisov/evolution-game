{"fileName":"/contracts/Authentication.sol","name":"Authentication","abi":[{"constant":false,"inputs":[{"name":"firstName","type":"bytes32"},{"name":"lastName","type":"bytes32"},{"name":"email","type":"bytes32"}],"name":"signup","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"bytes32"},{"name":"","type":"bytes32"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"firstName","type":"bytes32"},{"name":"lastName","type":"bytes32"},{"name":"email","type":"bytes32"}],"name":"update","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"bytes32"},{"name":"","type":"bytes32"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":true,"inputs":[],"name":"login","outputs":[{"name":"","type":"bytes32"},{"name":"","type":"bytes32"},{"name":"","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"_recipient","type":"address"}],"name":"destroyAndSend","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_userAddress","type":"address"},{"indexed":false,"name":"_firstName","type":"bytes32"},{"indexed":false,"name":"_lastName","type":"bytes32"},{"indexed":true,"name":"_email","type":"bytes32"}],"name":"SignedUp","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_userAddress","type":"address"},{"indexed":false,"name":"_firstName","type":"bytes32"},{"indexed":false,"name":"_lastName","type":"bytes32"},{"indexed":true,"name":"_email","type":"bytes32"}],"name":"Updated","type":"event"}],"source":"pragma solidity 0.4.18;\n\nimport './zeppelin/lifecycle/Destructible.sol';\n\ncontract Authentication is Destructible {\n  struct User {\n    bytes32 firstName;\n    bytes32 lastName;\n    bytes32 email;\n  }\n\n  event SignedUp(address indexed _userAddress, bytes32 _firstName, bytes32 _lastName, bytes32 indexed _email);\n  event Updated(address indexed _userAddress, bytes32 _firstName, bytes32 _lastName, bytes32 indexed _email);\n  mapping (address => User) private users;\n  address[] usersArray;\n\n  uint private id; // Stores user id temporarily\n\n  modifier onlyExistingUser {\n    // Check if user exists or terminate\n\n    require(!(users[msg.sender].firstName == 0x0) && !(users[msg.sender].lastName == 0x0) && !(users[msg.sender].email == 0x0));\n    _;\n  }\n\n  modifier onlyValidEmail(bytes32 email) {\n    // Only valid emails allowed\n\n    require(!(email == 0x0));\n    _;\n  }\n\n  modifier onlyValidFirstName(bytes32 name) {\n    // Only valid names allowed\n\n    require(!(name == 0x0));\n    _;\n  }\n\n  modifier onlyValidLastName(bytes32 name) {\n    // Only valid names allowed\n\n    require(!(name == 0x0));\n    _;\n  }\n\n  function login()\n    external\n    view\n    onlyExistingUser\n    returns (bytes32, bytes32, bytes32)\n  {\n    return (users[msg.sender].firstName, users[msg.sender].lastName, users[msg.sender].email);\n  }\n\n  function signup(bytes32 firstName, bytes32 lastName, bytes32 email)\n    external\n    payable\n    onlyValidFirstName(firstName)\n    onlyValidLastName(lastName)\n    onlyValidEmail(email)\n    returns (bytes32, bytes32, bytes32)\n  {\n    // Check if user exists.\n    // If yes, return user.\n    // If no, check if user details were sent.\n    // If yes, create and return user.\n\n    if (users[msg.sender].firstName == 0x0) users[msg.sender].firstName = firstName;\n    if (users[msg.sender].lastName == 0x0) users[msg.sender].lastName = lastName;\n    if (users[msg.sender].email == 0x0) users[msg.sender].email = email;\n\n    SignedUp(msg.sender, firstName, lastName, email);\n  }\n\n  function update(bytes32 firstName, bytes32 lastName, bytes32 email)\n    external\n    payable\n    onlyValidFirstName(firstName)\n    onlyValidLastName(lastName)\n    onlyValidEmail(email)\n    onlyExistingUser\n    returns (bytes32, bytes32, bytes32)\n  {\n    // Update user.\n\n    if (users[msg.sender].firstName != 0x0) users[msg.sender].firstName = firstName;\n    if (users[msg.sender].lastName != 0x0) users[msg.sender].lastName = lastName;\n    if (users[msg.sender].email != 0x0) users[msg.sender].email = email;\n\n    Updated(msg.sender, firstName, lastName, email);\n  }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"firstName","type":"bytes32"},{"name":"lastName","type":"bytes32"},{"name":"email","type":"bytes32"}],"name":"signup","payable":true,"stateMutability":"payable","type":"function","signature":"signup(bytes32,bytes32,bytes32)","signatureHash":"1a2dc634"},{"constant":false,"inputs":[],"name":"destroy","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Transfers the current balance to the owner and terminates the contract.","signature":"destroy()","signatureHash":"83197ef0"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[{"name":"firstName","type":"bytes32"},{"name":"lastName","type":"bytes32"},{"name":"email","type":"bytes32"}],"name":"update","payable":true,"stateMutability":"payable","type":"function","signature":"update(bytes32,bytes32,bytes32)","signatureHash":"9c0d2525"},{"constant":true,"inputs":[],"name":"login","payable":false,"stateMutability":"view","type":"function","signature":"login()","signatureHash":"b34e97e8"},{"constant":false,"inputs":[{"name":"newOwner","type":"address","description":"The address to transfer ownership to."}],"name":"transferOwnership","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Allows the current owner to transfer control of the contract to a newOwner.","signature":"transferOwnership(address)","signatureHash":"f2fde38b"},{"constant":false,"inputs":[{"name":"_recipient","type":"address"}],"name":"destroyAndSend","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","signature":"destroyAndSend(address)","signatureHash":"f5074f41"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_userAddress","type":"address"},{"indexed":false,"name":"_firstName","type":"bytes32"},{"indexed":false,"name":"_lastName","type":"bytes32"},{"indexed":true,"name":"_email","type":"bytes32"}],"name":"SignedUp","type":"event","signature":"SignedUp(address,bytes32,bytes32,bytes32)","signatureHash":"43b85add"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_userAddress","type":"address"},{"indexed":false,"name":"_firstName","type":"bytes32"},{"indexed":false,"name":"_lastName","type":"bytes32"},{"indexed":true,"name":"_email","type":"bytes32"}],"name":"Updated","type":"event","signature":"Updated(address,bytes32,bytes32,bytes32)","signatureHash":"f30000b0"}]}
